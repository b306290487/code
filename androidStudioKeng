//安卓打包---无尽深坑

cmd  确保 adb 环境已经配置
安卓设备（手机） 确保 驱动安卓了 并且打开 开发者调试模式

1、错误提示：Error: Activity class {} does not exist解决方法

今天用android studio将项目运行到手机时候，突然报错：Error: Activity class {} does not exist，Error while Launching activity，
我特地去AndroidManifest.xml文件中找对应的activity，确实是存在的呀，配置也没有问题，搜索了半天，才找到原因所在，原来是因为android studio
的instant run的问题，网上解决方案有很多，这里记录一下，我认为最简单的解决方法。

在控制台输入：adb uninstall 你的应用包名（“com.lwfygame.xxcycj”）
adb uninstall com.lwfygame.xxcycj
adb -s cb6b8ec9 uninstall com.lwfygame.xxcycj

提示success表示成功，重新运行run既可安装应用。 

注意： 如果adb上链接了多个外部设备，需要在命令里增加指定设备 命令为 adb -s (设备名) uninstall 你的应用包名（“com.lwfygame.xxcycj”）
adb devices 查看当前链接设备的所有设备
adb kill-server 杀死adb服务 作用待测试

2、坑爹-重复导入open_ad_sdk
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar']) / /重复导入oopen_ad_sdk  会导致致命错误
    implementation fileTree(dir: "C:/CocosCreator_2.1.2/resources/cocos2d-x/cocos/platform/android/java/libs", include: ['*.jar'])
    implementation project(':libcocos2dx')
    compile(name: 'open_ad_sdk', ext: 'aar')   //重复导入oopen_ad_sdk  会导致致命错误
}

3、巨坑无比-之Release警告导致打包中断
有效信息：[
Warning: there were 69 unresolved references to classes or interfaces.
         You may need to add missing library jars or update their versions.
         If your code works fine without the missing classes, you can suppress
         the warnings with '-dontwarn' options.       ]
在终端打包出错可以在次打包在后面加入 --stacktrace -info 命令，来加强错误信息显示。
警告终止了 打包工作，需在proguard-rules.pro这个文件加一行 -ignorewarnings 来忽视警告

4、SDK之代码混淆
creator工程默认开启代码混淆 可能导致一些sdk异常，程序闪退
build.gradle里
 buildTypes {
    release {
        minifyEnabled true      //这个是用来开启删除无用代码，比如没有引用到的代码
        shrinkResources true    //用来开启删除无用资源，也就是没有被引用的文件
        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
}

5、手机信息获取的坑，   将 targetSdkVersion 改成 Android 5.1（API 级别 22）就可以直接获取权限，不需要用户确认后授权了。
    如果游戏在onCreate里获取设备信息，安卓版本又在6.0以上（需手动授权）；那么授权确认界面出来，onCreate早以运行，将获取不到设备信息
导致SDK不正常。
    集成的友盟+SDK的上报策略请在用户进行授权设备信息之后再进行上报，如若是初使化时上报的，用户还没有授权设备信息，
就不会上报广告匹配所使用的设备信息。尤其是注意的是 Android 6.0（API 级别 23）或更高版本，Android将READ_PHONE_STATE 
权限归类为危险权限，系统要求用户明确授予这个权限，如果没有授予，无法获取到设备的识别码。部分APP在集成友盟SDK时，
在未获得这个权限时，就进行了初始化，这时SDK采集不到imei等设备信息，造成激活匹配失败。请确认初始化sdk的过程是否已经拿到
了READ_PHONE_STATE权限。

6、安卓打开app直接挂，还没进oncreate
armeabi中so文件兼容问题  异常java.lang.UnsatisfiedLinkError: dalvik.system.PathClassLoader[DexPathList
解决方法 ： 在build.gradle中android下添加指定依赖包
   ndk{
            abiFilters "armeabi-v7a"
        }
帮助链接 ： https://blog.csdn.net/nicolelili1/article/details/77451838


、、、、、、、、、、、、、、终端功能命令、、、、、、、、、、、、、、、、、
gradlew assembleRelease    打包releces
gradlew clean 清除9GAG/app目录下的build文件夹
gradlew build 检查依赖并编译打包    这里注意的是 ./gradlew build 命令把debug、release环境的包都打出来
gradlew assembleDebug 或者 ./gradlew aD, 编译并打 Debug 包
gradlew assembleRelease 或者 ./gradlew aR, 编译并打 Release 包


gradlew compileReleaseSources --stacktrace -info   //编译Release工程  会有报错详情
gradlew compileDebugSources --stacktrace -info   //编译Debug工程  会有报错详情

adb connect localhost:5555  蓝叠模拟器
